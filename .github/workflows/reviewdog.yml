---
  name: ReviewDog
  # yamllint disable-line rule:truthy
  on:
    pull_request:
      branches: ["main"]

  jobs:
    markdownlint:
      name: runner / markdownlint
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: markdownlint
          uses: reviewdog/action-markdownlint@v0
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            reporter: github-check
        - name: Github Context
          env:
            GITHUB_CONTEXT: ${{ toJson(github) }}
          run: |
            echo "$GITHUB_CONTEXT" | jq -r '.'

    misspell:
      name: runner / misspell
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: reviewdog/action-misspell@v1
          with:
            github_token: ${{ secrets.github_token }}
            locale: US
            reporter: github-check
            level: warning
            path: |
              ./guides
            pattern: |
              *.md
        - name: Github Context
          env:
            GITHUB_CONTEXT: ${{ toJson(github) }}
          run: |
            echo "$GITHUB_CONTEXT" | jq -r '.'

    alex:
      name: runner / alex
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: reviewdog/action-alex@v1
          with:
            github_token: ${{ secrets.github_token }}
            reporter: github-check
            # GitHub Status Check won't become failure with warning.
            level: warning
        - name: Github Context
          env:
            GITHUB_CONTEXT: ${{ toJson(github) }}
          run: |
            echo "$GITHUB_CONTEXT" | jq -r '.'

    shellcheck:
      name: runner / shellcheck
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: reviewdog/action-shellcheck@v1
          with:
            github_token: ${{ secrets.github_token }}
            reporter: github-check
        - name: Github Context
          env:
            GITHUB_CONTEXT: ${{ toJson(github) }}
          run: |
            echo "$GITHUB_CONTEXT" | jq -r '.'

    gitleaks:
      name: runner / gitleaks
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: reviewdog/action-gitleaks@v1
          with:
            github_token: ${{ secrets.github_token }}
            reporter: github-check
        - name: Github Context
          env:
            GITHUB_CONTEXT: ${{ toJson(github) }}
          run: |
            echo "$GITHUB_CONTEXT" | jq -r '.'

    actionlint:
      name: runner / actionlint
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: reviewdog/action-actionlint@v1
          with:
            github_token: ${{ secrets.github_token }}
            reporter: github-check
        - name: Github Context
          env:
            GITHUB_CONTEXT: ${{ toJson(github) }}
          run: |
            echo "$GITHUB_CONTEXT" | jq -r '.'

    eclint:
      name: runner / eclint
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: reviewdog/action-eclint@v1
          with:
            github_token: ${{ secrets.github_token }}
            reporter: github-check
        - name: Github Context
          env:
            GITHUB_CONTEXT: ${{ toJson(github) }}
          run: |
            echo "$GITHUB_CONTEXT" | jq -r '.'

    textlint:
      name: runner / textlint
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: reviewdog/action-setup@v1
        - run: npm install
        - env:
            REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            npx textlint --format checkstyle --config "$(pwd)/.textlintrc" guides/**/*.md | \
              reviewdog -f=checkstyle -name="textlint" -reporter=github-check -level=info
        - name: Github Context
          env:
            GITHUB_CONTEXT: ${{ toJson(github) }}
          run: |
            echo "$GITHUB_CONTEXT" | jq -r '.'

    grafana-agent:
      name: runner / agent
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: reviewdog/action-setup@v1
        - run: |
            GITHUB_ORG="grafana" && \
            GITHUB_REPO="agent" && \
            ARCHIVE="grafana-agent" && \
            BINARY="grafana-agent" && \
            BIN_PATH="/usr/local/bin" && \
            TMP_PATH="/tmp" && \
            AGENT_VERSION=$(wget -q -O - "https://api.github.com/repos/$GITHUB_ORG/$GITHUB_REPO/releases/latest" \
                | grep -m 1 tag_name \
                | cut -d '"' -f 4 | cut -c2-) && \
            HOST_OS=$(uname -a | awk '{print tolower($1)}') && \
            HOST_ARCH=$(arch | sed 's/x86_64/amd64/') && \
            DOWNLOAD_URL="https://github.com/$GITHUB_ORG/$GITHUB_REPO/releases/download" && \
            DOWNLOAD_URL="$DOWNLOAD_URL/v$AGENT_VERSION/$ARCHIVE-$HOST_OS-$HOST_ARCH.zip"
                echo "Downloading $DOWNLOAD_URL to $TMP_PATH/$ARCHIVE.zip" && \
                wget -O "$TMP_PATH/$ARCHIVE.zip" "$DOWNLOAD_URL" && \
                echo "Unzipping: $TMP_PATH/$ARCHIVE.zip" && \
                ( cd "$TMP_PATH" || exit ; unzip -qq -o -d "$TMP_PATH" "$TMP_PATH/$BINARY.zip" ) && \
                rm -rf "$TMP_PATH/$ARCHIVE.zip" && \
                chmod a+x "$TMP_PATH/$BINARY-$HOST_OS-$HOST_ARCH" &&
                echo "Moving: $TMP_PATH/$ARCHIVE-$HOST_OS-$HOST_ARCH/$BINARY to $BIN_PATH/$BINARY" && \
                sudo mv "$TMP_PATH/$BINARY-$HOST_OS-$HOST_ARCH" "$BIN_PATH/$BINARY" && \
                rm -rf "$TMP_PATH/$ARCHIVE-$HOST_OS-$HOST_ARCH"

            echo ""
            grafana-agent --help
        - env:
            REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            ./tools/lint-river.sh --format=checkstyle | \
              reviewdog -f=checkstyle -name="grafana-agent" -reporter=github-check -level=error
        - name: Github Context
          env:
            GITHUB_CONTEXT: ${{ toJson(github) }}
          run: |
            echo "$GITHUB_CONTEXT" | jq -r '.'
